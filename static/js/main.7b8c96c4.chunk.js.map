{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","reset","handleSubmit","props","onFormSubmit","this","className","s","form","onSubmit","inputs","label","labelName","input","type","pattern","title","required","onChange","button","Component","Filter","filter","onChangeFilterValue","Contact","contact","onDelete","id","onClick","ContactList","filteredContacts","deleteContact","contacts","map","filteredContact","App","addItemToContacts","newName","newNumber","preventDefault","find","toLowerCase","window","alert","prevState","nanoid","deleteItemFromContacts","tempArr","filterContacts","includes","setFilterValue","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b8c96c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3bkHi\",\"button\":\"Contact_button__9h7mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__P6swS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__h7MBL\",\"labelName\":\"ContactForm_labelName__Uz_qg\",\"inputs\":\"ContactForm_inputs__vFcFA\",\"input\":\"ContactForm_input__1IGjh\",\"button\":\"ContactForm_button__1DemC\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  reset = () => this.setState({ name: '', number: '' });\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    this.props.onFormSubmit(e, name, number);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <div className={s.inputs}>\r\n          <label className={s.label}>\r\n            <p className={s.labelName}>Name</p>\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            <p className={s.labelName}>Number</p>\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, onChangeFilterValue }) {\r\n  return (\r\n    <div className={s.filter}>\r\n      <p className={s.title}>Find contacts by name</p>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filterValue\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\r\n            For example Adrian, Jacob Mercer, Charles de Batz de Castelmore\r\n            d'Artagnan\"\r\n          onChange={onChangeFilterValue}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilterValue: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nexport default function Contact({ contact, onDelete }) {\r\n  const { id, name, number } = contact;\r\n  return (\r\n    <li className={s.contact}>\r\n      <p>{name}</p>\r\n      <p>{number}</p>\r\n      <button className={s.button} type=\"button\" value={id} onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ filteredContacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {filteredContacts.map(filteredContact => (\r\n        <Contact\r\n          key={filteredContact.id}\r\n          contact={filteredContact}\r\n          onDelete={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList/';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  #contacts = 'contacts';\r\n  addItemToContacts = (e, newName, newNumber) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.contacts.find(\r\n        ({ name }) => name.toLowerCase() === newName.toLowerCase(),\r\n      )\r\n    )\r\n      return window.alert(`${newName} is already in contacts.`);\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [\r\n        {\r\n          id: nanoid(),\r\n          name: newName,\r\n          number: newNumber,\r\n        },\r\n        ...prevState.contacts,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem(this.#contacts));\r\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    const isUpdated = prevState.contacts !== contacts;\r\n    if (isUpdated) {\r\n      localStorage.setItem(this.#contacts, JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  deleteItemFromContacts = e => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const tempArr = prevState.contacts.filter(\r\n        ({ id }) => id !== e.target.value,\r\n      );\r\n      return { contacts: [...tempArr] };\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  setFilterValue = e => this.setState({ filter: e.target.value });\r\n\r\n  render() {\r\n    const filteredContacts = this.filterContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onFormSubmit={this.addItemToContacts} />\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          filter={this.state.filter}\r\n          onChangeFilterValue={this.setFilterValue}\r\n        />\r\n        <ContactList\r\n          filteredContacts={filteredContacts}\r\n          deleteContact={this.deleteItemFromContacts}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1kJ6R\",\"title\":\"Filter_title__1VOPi\",\"input\":\"Filter_input__3kF_e\"};"],"sourceRoot":""}